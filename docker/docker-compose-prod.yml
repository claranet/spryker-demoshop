--- 

version: '3'

services:
  init:
    image: "${IMAGE}:${VERSION}"
    command: "init"
    restart: "no"
    depends_on:
      - zed
    links:
      - elasticsearch
      - database
      - jenkins
    env_file: ./docker-compose.env
    environment:
      - APPLICATION_ENV=production
      - ENABLE_OPCACHE=true
    volumes:
      - ../config:/data/shop/config
      - ../assets:/data/shop/assets
      - ../src/Pyz:/data/shop/src/Pyz
      - ../composer.json:/data/shop/composer.json
      - ../package.json:/data/shop/package.json

  yves:
    image: "${IMAGE}:${VERSION}"
    build:
      context: ..
      args: 
        - NETRC=$NETRC 
    command: "run-yves"
    restart: always
    depends_on:
      - zed
    ports:
      - "2380:80"
    links:
      - zed
      - redis
      - elasticsearch
    env_file: ./docker-compose.env
    environment:
      - APPLICATION_ENV=production
      - ENABLE_OPCACHE=true

  zed: 
    image: "${IMAGE}:${VERSION}"
    build:
      context: ..
      args: 
        - NETRC=$NETRC 
    command: "run-zed"
    restart: always
    depends_on:
      - database
      - redis
      - elasticsearch
    ports:
      - "2381:80"
    links:
      - redis
      - elasticsearch
      - database
      - jenkins
    env_file: ./docker-compose.env
    environment:
      - APPLICATION_ENV=production
      - ENABLE_OPCACHE=true

  redis:
    image: "redis:3.2-alpine"
    restart: always

  elasticsearch:
    image: "elasticsearch:2.4-alpine"
    restart: always
    depends_on:
      - database

  database:
    image: "postgres:9.6.3-alpine"
    restart: always
    env_file: ./docker-compose.env

  jenkins:
    image: "jenkins:alpine"
    ports: 
      - "10007:8080"
    links:
      - database
      - elasticsearch
      - redis
    env_file: ./docker-compose.env
